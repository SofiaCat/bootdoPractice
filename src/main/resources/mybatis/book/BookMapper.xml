<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.book.dao.BookDao">

	<select id="get" resultType="com.bootdo.book.domain.BookDO">
		select `stu_book_id`,`user_id`,`book_name` from stu_book where stu_book_id = #{value}
	</select>

	<select id="list" resultType="com.bootdo.book.domain.BookDO">
		select `stu_book_id`,`user_id`,`book_name` from stu_book
        <where>  
		  		  <if test="stuBookId != null and stuBookId != ''"> and stu_book_id = #{stuBookId} </if>
		  		  <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
		  		  <if test="bookName != null and bookName != ''"> and book_name = #{bookName} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by stu_book_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from stu_book
		 <where>  
		  		  <if test="stuBookId != null and stuBookId != ''"> and stu_book_id = #{stuBookId} </if>
		  		  <if test="userId != null and userId != ''"> and user_id = #{userId} </if>
		  		  <if test="bookName != null and bookName != ''"> and book_name = #{bookName} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.bootdo.book.domain.BookDO">
		insert into stu_book
		(
			`stu_book_id`, 
			`user_id`, 
			`book_name`
		)
		values
		(
			#{stuBookId}, 
			#{userId}, 
			#{bookName}
		)
	</insert>
	 
	<update id="update" parameterType="com.bootdo.book.domain.BookDO">
		update stu_book 
		<set>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="bookName != null">`book_name` = #{bookName}</if>
		</set>
		where stu_book_id = #{stuBookId}
	</update>
	
	<delete id="remove">
		delete from stu_book where stu_book_id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from stu_book where stu_book_id in 
		<foreach item="stuBookId" collection="array" open="(" separator="," close=")">
			#{stuBookId}
		</foreach>
	</delete>
	<select id="allList" resultType="java.util.Map">
		SELECT su.`name`as '用户',sb.book_name as '书名'
		FROM sys_user su,stu_book sb
		WHERE su.user_id=sb.user_id

	</select>
</mapper>